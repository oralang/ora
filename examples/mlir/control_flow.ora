// Control flow examples
// This demonstrates how Ora control flow constructs are lowered to MLIR

fn conditional(x: u256) -> u256 {
    if (x > 100) {
        return x * 2;
    } else {
        return x + 10;
    }
}

fn while_loop(mut count: u256) -> u256 {
    let mut sum: u256 = 0;
    while (count > 0) {
        sum = sum + count;
        count = count - 1;
    }
    return sum;
}

fn for_loop(array: [u256; 5]) -> u256 {
    let mut sum: u256 = 0;
    for (array) |item| {
        sum = sum + item;
    }
    return sum;
}

fn switch_statement(value: u256) -> u256 {
    switch (value) {
        case 0 => return 1;
        case 1...10 => return value * 2;
        case 100 => return 999;
        else => return 0;
    }
}

fn switch_expression(value: u256) -> u256 {
    return switch (value) {
        0 => 1,
        1...10 => value * 2,
        100 => 999,
        else => 0,
    };
}