// Performance Optimization Example
// This file demonstrates features that benefit from performance optimizations

// String interning benefits
// These identifiers will be interned to save memory
let repeated_identifier_1 = 1;
let repeated_identifier_2 = 2;
let repeated_identifier_3 = 3;
let repeated_identifier_4 = 4;
let repeated_identifier_5 = 5;
let repeated_identifier_1_again = 6; // Same identifier reused

// Many repeated keywords benefit from interning
if (true) {
    if (true) {
        if (true) {
            if (true) {
                // Nested blocks with repeated keywords
            }
        }
    }
}

// Large number of tokens for benchmarking
let a1 = 1; let a2 = 2; let a3 = 3; let a4 = 4; let a5 = 5;
let a6 = 6; let a7 = 7; let a8 = 8; let a9 = 9; let a10 = 10;
let a11 = 11; let a12 = 12; let a13 = 13; let a14 = 14; let a15 = 15;
let a16 = 16; let a17 = 17; let a18 = 18; let a19 = 19; let a20 = 20;

// Fast-path scanning patterns
let simple_ident = simple;
let simple_number = 123;
let simple_string = "simple";
let simple_char = 'a';