a + b
x - y
a * b + c
(x + y) * z
a + b * c - d / e % f
x == y && z != w
a < b || c > d

// shift precedence tests
// (a + b) << c < d
(a + b) << c < d
// a >> (b + c) == d
a >> (b + c) == d
x & y | z ^ w
a << 2 >> 1

// exponent precedence tests (right-associative)
2 ** 3
2 ** 3 ** 2 // equals 2 ** (3 ** 2)
(a + b) ** c

// bitwise vs logical precedence snapshots
a & b && c | d || e ^ f