contract SimpleToken {
    storage {
        balances: map<address, u256>,
        total_supply: u256,
        owner: address,
    }
    
    init(initial_supply: u256) {
        total_supply = initial_supply;
        owner = msg.sender;
        balances[owner] = initial_supply;
    }
    
    pub fn transfer(to: address, amount: u256) -> bool
        requires(balances[msg.sender] >= amount)
        requires(to != address(0))
        ensures(balances[msg.sender] == old(balances[msg.sender]) - amount)
        ensures(balances[to] == old(balances[to]) + amount)
    {
        balances[msg.sender] -= amount;
        balances[to] += amount;
        log("Transfer", msg.sender, to, amount);
        return true;
    }
    
    pub fn balance_of(account: address) -> u256 {
        return balances[account];
    }
    
    pub fn get_total_supply() -> u256 {
        return total_supply;
    }
    
    pub fn mint(to: address, amount: u256) 
        requires(msg.sender == owner)
        requires(to != address(0))
    {
        balances[to] += amount;
        total_supply += amount;
        log("Mint", to, amount);
    }
}